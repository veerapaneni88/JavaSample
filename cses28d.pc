/***************************************************************************
**
** Module File:  CSES28D.PC
** 
** DAM Name:     CSES28D
** 
** Description:  This DAM will JOIN and do a SELECT * FROM Resource and
**               Placement WHERE RESOURCE.IdResource == 
**               PLACEMENT.IdResource and PLACEMENT.IdPlcmtChild ==
**               Host:IdPerson and PLACEMENT.DtPlcmtStart == Greatest.
** 
** Environment:  HP-UX v9.04
**               FOUNDATION 2.4 for Unix (Construction, Production)
**               HP-UX Ansi C Compiler
**               ORACLE Pro*C SQL PreCompiler
** 
** Date Created: Fri Nov  3 15:05:47 1995
**
** Programmer:   Richard Denton
**
** Archive Information: $Revision:   1.0  $
**                      $Date:   27 May 1996 20:42:42  $
**                      $Modtime:   29 Mar 1996 23:20:26  $
**                      $Author:   pvcs  $
**
** Change History:
**  Date      User      Description
**  --------  --------  --------------------------------------------------
**  02/18/05  dejuanr   SIR 14123 - Added a (+) to resource linking where statement.
**                      This will prevent the dam from returning nothign if
**                      a child lives with a person rather than a resource.
***************************************************************************/ 

/**************************************************************************
** Include Files
***************************************************************************/
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <limits.h>
#include <float.h>
#include <kglhk020.h>
#include <kcdak010.h>
#include "arcsrvr.h"

#include "cses28di.h"
#include "cses28do.h"

EXEC SQL INCLUDE sqlca.h;

/*************************************************************************
*
*          Function:        cses28dQUERYdam
*
*
*              File:        CSES28D.PC
*
*
*        Generation:        Fri Nov  3 15:05:47 1995
*
*************************************************************************/
long  cses28dQUERYdam(void *pSQLCA,
                          _CSES28DI *pInputDataRec,
                          _CSES28DO *pOutputDataRec) 
{

EXEC SQL BEGIN DECLARE SECTION;
unsigned long hI_ulIdPerson;
short hI_ulIdPerson_i;

char MaxDate[11];


unsigned long hO_ulIdPlcmtEvent;
short hO_ulIdPlcmtEvent_i;
char hO_tsLastUpdate[7];
EXEC SQL VAR hO_tsLastUpdate IS DATE;
short hO_tsLastUpdate_i;
unsigned long hO_ulIdPlcmtAdult;
short hO_ulIdPlcmtAdult_i;
unsigned long hO_ulIdPlcmtChild;
short hO_ulIdPlcmtChild_i;
unsigned long hO_ulIdRsrcAgency;
short hO_ulIdRsrcAgency_i;
unsigned long hO_ulIdRsrcFacil;
short hO_ulIdRsrcFacil_i;
char hO_szAddrPlcmtCity[21];
EXEC SQL VAR hO_szAddrPlcmtCity IS STRING;
short hO_szAddrPlcmtCity_i;
char hO_szAddrPlcmtCnty[4];
EXEC SQL VAR hO_szAddrPlcmtCnty IS STRING;
short hO_szAddrPlcmtCnty_i;
char hO_szAddrPlcmtLn1[31];
EXEC SQL VAR hO_szAddrPlcmtLn1 IS STRING;
short hO_szAddrPlcmtLn1_i;
char hO_szAddrPlcmtLn2[31];
EXEC SQL VAR hO_szAddrPlcmtLn2 IS STRING;
short hO_szAddrPlcmtLn2_i;
char hO_szAddrPlcmtSt[3];
EXEC SQL VAR hO_szAddrPlcmtSt IS STRING;
short hO_szAddrPlcmtSt_i;
char hO_szAddrPlcmtZip[11];
EXEC SQL VAR hO_szAddrPlcmtZip IS STRING;
short hO_szAddrPlcmtZip_i;
char hO_szCdPlcmtInfo1[4];
EXEC SQL VAR hO_szCdPlcmtInfo1 IS STRING;
short hO_szCdPlcmtInfo1_i;
char hO_szCdPlcmtInfo2[4];
EXEC SQL VAR hO_szCdPlcmtInfo2 IS STRING;
short hO_szCdPlcmtInfo2_i;
char hO_szCdPlcmtInfo3[4];
EXEC SQL VAR hO_szCdPlcmtInfo3 IS STRING;
short hO_szCdPlcmtInfo3_i;
char hO_szCdPlcmtInfo4[4];
EXEC SQL VAR hO_szCdPlcmtInfo4 IS STRING;
short hO_szCdPlcmtInfo4_i;
char hO_szCdPlcmtInfo5[4];
EXEC SQL VAR hO_szCdPlcmtInfo5 IS STRING;
short hO_szCdPlcmtInfo5_i;
char hO_szCdPlcmtInfo6[4];
EXEC SQL VAR hO_szCdPlcmtInfo6 IS STRING;
short hO_szCdPlcmtInfo6_i;
char hO_szCdPlcmtInfo7[4];
EXEC SQL VAR hO_szCdPlcmtInfo7 IS STRING;
short hO_szCdPlcmtInfo7_i;
char hO_szCdPlcmtLivArr[4];
EXEC SQL VAR hO_szCdPlcmtLivArr IS STRING;
short hO_szCdPlcmtLivArr_i;
char hO_szCdPlcmtRemovalRsn[4];
EXEC SQL VAR hO_szCdPlcmtRemovalRsn IS STRING;
short hO_szCdPlcmtRemovalRsn_i;
char hO_szCdPlcmtActPlanned[2];
EXEC SQL VAR hO_szCdPlcmtActPlanned IS STRING;
short hO_szCdPlcmtActPlanned_i;
char hO_szCdPlcmtType[5];
EXEC SQL VAR hO_szCdPlcmtType IS STRING;
short hO_szCdPlcmtType_i;
char hO_dtDtPlcmtCaregvrDiscuss[7];
EXEC SQL VAR hO_dtDtPlcmtCaregvrDiscuss IS DATE;
short hO_dtDtPlcmtCaregvrDiscuss_i;
char hO_dtDtPlcmtChildDiscuss[7];
EXEC SQL VAR hO_dtDtPlcmtChildDiscuss IS DATE;
short hO_dtDtPlcmtChildDiscuss_i;
char hO_dtDtPlcmtChildPlan[7];
EXEC SQL VAR hO_dtDtPlcmtChildPlan IS DATE;
short hO_dtDtPlcmtChildPlan_i;
char hO_dtDtPlcmtEducLog[7];
EXEC SQL VAR hO_dtDtPlcmtEducLog IS DATE;
short hO_dtDtPlcmtEducLog_i;
char hO_dtDtPlcmtEnd[7];
EXEC SQL VAR hO_dtDtPlcmtEnd IS DATE;
short hO_dtDtPlcmtEnd_i;
char hO_dtDtPlcmtMeddevHistory[7];
EXEC SQL VAR hO_dtDtPlcmtMeddevHistory IS DATE;
short hO_dtDtPlcmtMeddevHistory_i;
char hO_dtDtPlcmtParentsNotif[7];
EXEC SQL VAR hO_dtDtPlcmtParentsNotif IS DATE;
short hO_dtDtPlcmtParentsNotif_i;
char hO_dtDtPlcmtPreplaceVisit[7];
EXEC SQL VAR hO_dtDtPlcmtPreplaceVisit IS DATE;
short hO_dtDtPlcmtPreplaceVisit_i;
char hO_dtDtPlcmtSchoolRecords[7];
EXEC SQL VAR hO_dtDtPlcmtSchoolRecords IS DATE;
short hO_dtDtPlcmtSchoolRecords_i;
char hO_dtDtPlcmtStart[7];
EXEC SQL VAR hO_dtDtPlcmtStart IS DATE;
short hO_dtDtPlcmtStart_i;
char hO_cIndPlcmtContCntct;
EXEC SQL VAR hO_cIndPlcmtContCntct IS CHAR(1);
short hO_cIndPlcmtContCntct_i;
char hO_cIndPlcmtEducLog;
EXEC SQL VAR hO_cIndPlcmtEducLog IS CHAR(1);
short hO_cIndPlcmtEducLog_i;
char hO_cIndPlcmetEmerg;
EXEC SQL VAR hO_cIndPlcmetEmerg IS CHAR(1);
short hO_cIndPlcmetEmerg_i;
char hO_cIndPlcmtNotApplic;
EXEC SQL VAR hO_cIndPlcmtNotApplic IS CHAR(1);
short hO_cIndPlcmtNotApplic_i;
char hO_cIndPlcmtSchoolDoc;
EXEC SQL VAR hO_cIndPlcmtSchoolDoc IS CHAR(1);
short hO_cIndPlcmtSchoolDoc_i;
char hO_cIndPlcmtWriteHistory;
EXEC SQL VAR hO_cIndPlcmtWriteHistory IS CHAR(1);
short hO_cIndPlcmtWriteHistory_i;
char hO_szNbrPlcmtPhoneExt[9];
EXEC SQL VAR hO_szNbrPlcmtPhoneExt IS STRING;
short hO_szNbrPlcmtPhoneExt_i;
char hO_szNbrPlcmtTelephone[11];
EXEC SQL VAR hO_szNbrPlcmtTelephone IS STRING;
short hO_szNbrPlcmtTelephone_i;
char hO_szNmPlcmtAgency[31];
EXEC SQL VAR hO_szNmPlcmtAgency IS STRING;
short hO_szNmPlcmtAgency_i;
char hO_szNmPlcmtContact[26];
EXEC SQL VAR hO_szNmPlcmtContact IS STRING;
short hO_szNmPlcmtContact_i;
char hO_szNmPlcmtFacil[31];
EXEC SQL VAR hO_szNmPlcmtFacil IS STRING;
short hO_szNmPlcmtFacil_i;
char hO_szNmPlcmtPersonFull[26];
EXEC SQL VAR hO_szNmPlcmtPersonFull IS STRING;
short hO_szNmPlcmtPersonFull_i;
char hO_szTxtPlcmtAddrComment[301];
EXEC SQL VAR hO_szTxtPlcmtAddrComment IS STRING;
short hO_szTxtPlcmtAddrComment_i;
char hO_szTxtPlcmtDiscussion[241];
EXEC SQL VAR hO_szTxtPlcmtDiscussion IS STRING;
short hO_szTxtPlcmtDiscussion_i;
char hO_szTxtPlcmtDocuments[241];
EXEC SQL VAR hO_szTxtPlcmtDocuments IS STRING;
short hO_szTxtPlcmtDocuments_i;
char hO_szTxtPlcmtRemovalRsn[301];
EXEC SQL VAR hO_szTxtPlcmtRemovalRsn IS STRING;
short hO_szTxtPlcmtRemovalRsn_i;
unsigned long hO_ulIdResource;
short hO_ulIdResource_i;
char hO_szAddrRsrcStLn1[31];
EXEC SQL VAR hO_szAddrRsrcStLn1 IS STRING;
short hO_szAddrRsrcStLn1_i;
char hO_szAddrRsrcStLn2[31];
EXEC SQL VAR hO_szAddrRsrcStLn2 IS STRING;
short hO_szAddrRsrcStLn2_i;
char hO_szAddrRsrcCity[21];
EXEC SQL VAR hO_szAddrRsrcCity IS STRING;
short hO_szAddrRsrcCity_i;
char hO_szCdRsrcState[3];
EXEC SQL VAR hO_szCdRsrcState IS STRING;
short hO_szCdRsrcState_i;
char hO_lAddrRsrcZip[11];
EXEC SQL VAR hO_lAddrRsrcZip IS STRING;
short hO_lAddrRsrcZip_i;
char hO_szAddrRsrcAttn[31];
EXEC SQL VAR hO_szAddrRsrcAttn IS STRING;
short hO_szAddrRsrcAttn_i;
char hO_szCdRsrcCnty[4];
EXEC SQL VAR hO_szCdRsrcCnty IS STRING;
short hO_szCdRsrcCnty_i;
char hO_szCdRsrcInvolClosure[2];
EXEC SQL VAR hO_szCdRsrcInvolClosure IS STRING;
short hO_szCdRsrcInvolClosure_i;
char hO_szCdRsrcClosureRsn[4];
EXEC SQL VAR hO_szCdRsrcClosureRsn IS STRING;
short hO_szCdRsrcClosureRsn_i;
char hO_szCdRsrcCampusType[2];
EXEC SQL VAR hO_szCdRsrcCampusType IS STRING;
short hO_szCdRsrcCampusType_i;
char hO_szCdRsrcCategory[2];
EXEC SQL VAR hO_szCdRsrcCategory IS STRING;
short hO_szCdRsrcCategory_i;
char hO_szCdRsrcCertBy[3];
EXEC SQL VAR hO_szCdRsrcCertBy IS STRING;
short hO_szCdRsrcCertBy_i;
char hO_szCdRsrcEthnicity[3];
EXEC SQL VAR hO_szCdRsrcEthnicity IS STRING;
short hO_szCdRsrcEthnicity_i;
char hO_szCdRsrcFaHomeStatus[4];
EXEC SQL VAR hO_szCdRsrcFaHomeStatus IS STRING;
short hO_szCdRsrcFaHomeStatus_i;
char hO_cCdRsrcFaHomeType1;
EXEC SQL VAR hO_cCdRsrcFaHomeType1 IS CHAR(1);
short hO_cCdRsrcFaHomeType1_i;
char hO_cCdRsrcFaHomeType2;
EXEC SQL VAR hO_cCdRsrcFaHomeType2 IS CHAR(1);
short hO_cCdRsrcFaHomeType2_i;
char hO_cCdRsrcFaHomeType3;
EXEC SQL VAR hO_cCdRsrcFaHomeType3 IS CHAR(1);
short hO_cCdRsrcFaHomeType3_i;
char hO_cCdRsrcFaHomeType4;
EXEC SQL VAR hO_cCdRsrcFaHomeType4 IS CHAR(1);
short hO_cCdRsrcFaHomeType4_i;
char hO_cCdRsrcFaHomeType5;
EXEC SQL VAR hO_cCdRsrcFaHomeType5 IS CHAR(1);
short hO_cCdRsrcFaHomeType5_i;
char hO_cCdRsrcFaHomeType6;
EXEC SQL VAR hO_cCdRsrcFaHomeType6 IS CHAR(1);
short hO_cCdRsrcFaHomeType6_i;
char hO_cCdRsrcFaHomeType7;
EXEC SQL VAR hO_cCdRsrcFaHomeType7 IS CHAR(1);
short hO_cCdRsrcFaHomeType7_i;
char hO_szCdRsrcFacilType[3];
EXEC SQL VAR hO_szCdRsrcFacilType IS STRING;
short hO_szCdRsrcFacilType_i;
char hO_szCdRsrcLanguage[3];
EXEC SQL VAR hO_szCdRsrcLanguage IS STRING;
short hO_szCdRsrcLanguage_i;
char hO_szCdRsrcMaintainer[3];
EXEC SQL VAR hO_szCdRsrcMaintainer IS STRING;
short hO_szCdRsrcMaintainer_i;
char hO_szCdRsrcMaritalStatus[3];
EXEC SQL VAR hO_szCdRsrcMaritalStatus IS STRING;
short hO_szCdRsrcMaritalStatus_i;
char hO_szCdRsrcOperBy[3];
EXEC SQL VAR hO_szCdRsrcOperBy IS STRING;
short hO_szCdRsrcOperBy_i;
char hO_szCdRsrcOwnership[3];
EXEC SQL VAR hO_szCdRsrcOwnership IS STRING;
short hO_szCdRsrcOwnership_i;
char hO_szCdRsrcPayment[3];
EXEC SQL VAR hO_szCdRsrcPayment IS STRING;
short hO_szCdRsrcPayment_i;
char hO_szCdRsrcRecmndReopen[4];
EXEC SQL VAR hO_szCdRsrcRecmndReopen IS STRING;
short hO_szCdRsrcRecmndReopen_i;
char hO_szCdRsrcRegion[3];
EXEC SQL VAR hO_szCdRsrcRegion IS STRING;
short hO_szCdRsrcRegion_i;
char hO_szCdRsrcReligion[3];
EXEC SQL VAR hO_szCdRsrcReligion IS STRING;
short hO_szCdRsrcReligion_i;
char hO_szCdRsrcRespite[2];
EXEC SQL VAR hO_szCdRsrcRespite IS STRING;
short hO_szCdRsrcRespite_i;
char hO_szCdRsrcSchDist[7];
EXEC SQL VAR hO_szCdRsrcSchDist IS STRING;
short hO_szCdRsrcSchDist_i;
char hO_szCdRsrcSetting[3];
EXEC SQL VAR hO_szCdRsrcSetting IS STRING;
short hO_szCdRsrcSetting_i;
char hO_szCdRsrcSourceInquiry[4];
EXEC SQL VAR hO_szCdRsrcSourceInquiry IS STRING;
short hO_szCdRsrcSourceInquiry_i;
char hO_szCdRsrcStatus[3];
EXEC SQL VAR hO_szCdRsrcStatus IS STRING;
short hO_szCdRsrcStatus_i;
char hO_szCdRsrcType[3];
EXEC SQL VAR hO_szCdRsrcType IS STRING;
short hO_szCdRsrcType_i;
char hO_dtDtRsrcMarriage[7];
EXEC SQL VAR hO_dtDtRsrcMarriage IS DATE;
short hO_dtDtRsrcMarriage_i;
char hO_dtDtRsrcCert[7];
EXEC SQL VAR hO_dtDtRsrcCert IS DATE;
short hO_dtDtRsrcCert_i;
char hO_dtDtRsrcClose[7];
EXEC SQL VAR hO_dtDtRsrcClose IS DATE;
short hO_dtDtRsrcClose_i;
unsigned long hO_ulIdRsrcFaHomeEvent;
short hO_ulIdRsrcFaHomeEvent_i;
unsigned long hO_ulIdRsrcFaHomeStage;
short hO_ulIdRsrcFaHomeStage_i;
char hO_cIndRsrcCareProv;
EXEC SQL VAR hO_cIndRsrcCareProv IS CHAR(1);
short hO_cIndRsrcCareProv_i;
char hO_cIndRsrcEmergPlace;
EXEC SQL VAR hO_cIndRsrcEmergPlace IS CHAR(1);
short hO_cIndRsrcEmergPlace_i;
char hO_cIndRsrcInactive;
EXEC SQL VAR hO_cIndRsrcInactive IS CHAR(1);
short hO_cIndRsrcInactive_i;
char hO_bIndRsrcIndivStudy;
EXEC SQL VAR hO_bIndRsrcIndivStudy IS CHAR(1);
short hO_bIndRsrcIndivStudy_i;
char hO_bIndRsrcNonPrs;
EXEC SQL VAR hO_bIndRsrcNonPrs IS CHAR(1);
short hO_bIndRsrcNonPrs_i;
char hO_cIndRsrcTransport;
EXEC SQL VAR hO_cIndRsrcTransport IS CHAR(1);
short hO_cIndRsrcTransport_i;
char hO_cIndRsrcWriteHist;
EXEC SQL VAR hO_cIndRsrcWriteHist IS CHAR(1);
short hO_cIndRsrcWriteHist_i;
char hO_szNmRsrcLastUpdate[26];
EXEC SQL VAR hO_szNmRsrcLastUpdate IS STRING;
short hO_szNmRsrcLastUpdate_i;
char hO_szNmResource[31];
EXEC SQL VAR hO_szNmResource IS STRING;
short hO_szNmResource_i;
char hO_szNmRsrcContact[26];
EXEC SQL VAR hO_szNmRsrcContact IS STRING;
short hO_szNmRsrcContact_i;
double hO_dNbrRsrcAnnualIncome;
short hO_dNbrRsrcAnnualIncome_i;
unsigned long hO_lNbrSchCampusNbr;
short hO_lNbrSchCampusNbr_i;
unsigned long hO_lNbrRsrcFacilAcclaim;
short hO_lNbrRsrcFacilAcclaim_i;
unsigned short hO_uNbrRsrcFacilCapacity;
short hO_uNbrRsrcFacilCapacity_i;
unsigned short hO_uNbrRsrcFMAgeMax;
short hO_uNbrRsrcFMAgeMax_i;
unsigned short hO_uNbrRsrcFMAgeMin;
short hO_uNbrRsrcFMAgeMin_i;
unsigned short hO_uNbrRsrcMlAgeMax;
short hO_uNbrRsrcMlAgeMax_i;
unsigned short hO_uNbrRsrcMlAgeMin;
short hO_uNbrRsrcMlAgeMin_i;
unsigned short hO_uNbrRsrcIntChildren;
short hO_uNbrRsrcIntChildren_i;
unsigned short hO_uNbrRsrcIntFeAgeMax;
short hO_uNbrRsrcIntFeAgeMax_i;
unsigned short hO_uNbrRsrcIntFeAgeMin;
short hO_uNbrRsrcIntFeAgeMin_i;
unsigned short hO_uNbrRsrcIntMaAgeMax;
short hO_uNbrRsrcIntMaAgeMax_i;
unsigned short hO_uNbrRsrcIntMaAgeMin;
short hO_uNbrRsrcIntMaAgeMin_i;
short hO_sNbrRsrcOpenSlots;
short hO_sNbrRsrcOpenSlots_i;
char hO_szNbrRsrcPhn[11];
EXEC SQL VAR hO_szNbrRsrcPhn IS STRING;
short hO_szNbrRsrcPhn_i;
char hO_lNbrFacilPhoneExtension[9];
EXEC SQL VAR hO_lNbrFacilPhoneExtension IS STRING;
short hO_lNbrFacilPhoneExtension_i;
char hO_szNbrRsrcVid[15];
EXEC SQL VAR hO_szNbrRsrcVid IS STRING;
short hO_szNbrRsrcVid_i;
char hO_szTxtRsrcAddrCmnts[81];
EXEC SQL VAR hO_szTxtRsrcAddrCmnts IS STRING;
short hO_szTxtRsrcAddrCmnts_i;
char hO_szTxtRsrcComments[301];
EXEC SQL VAR hO_szTxtRsrcComments IS STRING;
short hO_szTxtRsrcComments_i;
EXEC SQL END DECLARE SECTION;

long BegPageRow = 0, EndPageRow = 0, i = 0;
long lTotal = 0, lOutputIndex = 0, lHostIndex = 0;
unsigned short uStatus;
struct sqlca previousSQLCA;
sqlca.sqlcode = 0;

uStatus=ARC_UTLNumberToHost(&hI_ulIdPerson,
             &(pInputDataRec->ulIdPerson),
             sizeof(pInputDataRec->ulIdPerson),
             &hI_ulIdPerson_i);
if (uStatus != 0)
{
    return (uStatus);
}



strcpy (MaxDate, ARC_MAX_DATE_STRING); 

EXEC SQL
	DECLARE CSES28D_CURSOR CURSOR FOR
	SELECT
		P.ID_PLCMT_EVENT,
		P.DT_LAST_UPDATE,
		P.ID_PLCMT_ADULT,
		P.ID_PLCMT_CHILD,
		P.ID_RSRC_AGENCY,
		P.ID_RSRC_FACIL,
		P.ADDR_PLCMT_CITY,
		P.ADDR_PLCMT_CNTY,
		P.ADDR_PLCMT_LN1,
		P.ADDR_PLCMT_LN2,
		P.ADDR_PLCMT_ST,
		P.ADDR_PLCMT_ZIP,
		P.CD_PLCMT_INFO_1,
		P.CD_PLCMT_INFO_2,
		P.CD_PLCMT_INFO_3,
		P.CD_PLCMT_INFO_4,
		P.CD_PLCMT_INFO_5,
		P.CD_PLCMT_INFO_6,
		P.CD_PLCMT_INFO_7,
		P.CD_PLCMT_LIV_ARR,
		P.CD_PLCMT_REMOVAL_RSN,
		P.CD_PLCMT_ACT_PLANNED,
		P.CD_PLCMT_TYPE,
		P.DT_PLCMT_CAREGVR_DISCUSS,
		P.DT_PLCMT_CHILD_DISCUSS,
		P.DT_PLCMT_CHILD_PLAN,
		P.DT_PLCMT_EDUC_LOG,
		P.DT_PLCMT_END,
		P.DT_PLCMT_MEDDEV_HISTORY,
		P.DT_PLCMT_PARENTS_NOTIF,
		P.DT_PLCMT_PREPLACE_VISIT,
		P.DT_PLCMT_SCHOOL_RECORDS,
		P.DT_PLCMT_START,
		P.IND_PLCMT_CONT_CNTCT,
		P.IND_PLCMT_EDUC_LOG,
		P.IND_PLCMT_EMERG,
		P.IND_PLCMT_NOT_APPLIC,
		P.IND_PLCMT_SCHOOL_DOC,
		P.IND_PLCMT_WRITE_HISTORY,
		P.NBR_PLCMT_PHONE_EXT,
		P.NBR_PLCMT_TELEPHONE,
		P.NM_PLCMT_AGENCY,
		P.NM_PLCMT_CONTACT,
		P.NM_PLCMT_FACIL,
		P.NM_PLCMT_PERSON_FULL,
		P.TXT_PLCMT_ADDR_COMMENT,
		P.TXT_PLCMT_DISCUSSION,
		P.TXT_PLCMT_DOCUMENTS,
		P.TXT_PLCMT_REMOVAL_RSN,
		C.ID_RESOURCE,
		C.ADDR_RSRC_ST_LN_1,
		C.ADDR_RSRC_ST_LN_2,
		C.ADDR_RSRC_CITY,
		C.CD_RSRC_STATE,
		C.ADDR_RSRC_ZIP,
		C.ADDR_RSRC_ATTN,
		C.CD_RSRC_CNTY,
		C.CD_RSRC_INVOL_CLOSURE,
		C.CD_RSRC_CLOSURE_RSN,
		C.CD_RSRC_CAMPUS_TYPE,
		C.CD_RSRC_CATEGORY,
		C.CD_RSRC_CERT_BY,
		C.CD_RSRC_ETHNICITY,
		C.CD_RSRC_FA_HOME_STATUS,
		C.CD_RSRC_FA_HOME_TYPE_1,
		C.CD_RSRC_FA_HOME_TYPE_2,
		C.CD_RSRC_FA_HOME_TYPE_3,
		C.CD_RSRC_FA_HOME_TYPE_4,
		C.CD_RSRC_FA_HOME_TYPE_5,
		C.CD_RSRC_FA_HOME_TYPE_6,
		C.CD_RSRC_FA_HOME_TYPE_7,
		C.CD_RSRC_FACIL_TYPE,
		C.CD_RSRC_LANGUAGE,
		C.CD_RSRC_MAINTAINER,
		C.CD_RSRC_MARITAL_STATUS,
		C.CD_RSRC_OPER_BY,
		C.CD_RSRC_OWNERSHIP,
		C.CD_RSRC_PAYMENT,
		C.CD_RSRC_RECMND_REOPEN,
		C.CD_RSRC_REGION,
		C.CD_RSRC_RELIGION,
		C.CD_RSRC_RESPITE,
		C.CD_RSRC_SCH_DIST,
		C.CD_RSRC_SETTING,
		C.CD_RSRC_SOURCE_INQUIRY,
		C.CD_RSRC_STATUS,
		C.CD_RSRC_TYPE,
		C.DT_RSRC_MARRIAGE,
		C.DT_RSRC_CERT,
		C.DT_RSRC_CLOSE,
		C.ID_RSRC_FA_HOME_EVENT,
		C.ID_RSRC_FA_HOME_STAGE,
		C.IND_RSRC_CARE_PROV,
		C.IND_RSRC_EMERG_PLACE,
		C.IND_RSRC_INACTIVE,
		C.IND_RSRC_INDIV_STUDY,
		C.IND_RSRC_NONPRS,
		C.IND_RSRC_TRANSPORT,
		C.IND_RSRC_WRITE_HIST,
		C.NM_RSRC_LAST_UPDATE,
		C.NM_RESOURCE,
		C.NM_RSRC_CONTACT,
		C.NBR_RSRC_ANNUAL_INCOME,
		C.NBR_RSRC_CAMPUS_NBR,
		C.NBR_RSRC_FACIL_ACCLAIM,
		C.NBR_RSRC_FACIL_CAPACITY,
		C.NBR_RSRC_FM_AGE_MAX,
		C.NBR_RSRC_FM_AGE_MIN,
		C.NBR_RSRC_MA_AGE_MAX,
		C.NBR_RSRC_MA_AGE_MIN,
		C.NBR_RSRC_INT_CHILDREN,
		C.NBR_RSRC_INT_FE_AGE_MAX,
		C.NBR_RSRC_INT_FE_AGE_MIN,
		C.NBR_RSRC_INT_MA_AGE_MAX,
		C.NBR_RSRC_INT_MA_AGE_MIN,
		C.NBR_RSRC_OPEN_SLOTS,
		C.NBR_RSRC_PHN,
		C.NBR_RSRC_PHONE_EXT,
		C.NBR_RSRC_VID,
		C.TXT_RSRC_ADDR_CMNTS,
		C.TXT_RSRC_COMMENTS
FROM
		CAPS_RESOURCE C,
		PLACEMENT P
        WHERE
		P.ID_PLCMT_CHILD        = :hI_ulIdPerson:hI_ulIdPerson_i
        AND
		C.ID_RESOURCE (+)       = P.ID_RSRC_FACIL  
        AND
		P.DT_PLCMT_END          = :MaxDate
        AND
		P.CD_PLCMT_ACT_PLANNED  = 'A' ;



EXEC SQL
	OPEN CSES28D_CURSOR;


if ( sqlca.sqlcode != 0 )
{
	memcpy(pSQLCA, (void *)&sqlca, sizeof(struct sqlca));
	return sqlca.sqlcode;
}


EXEC SQL
	FETCH CSES28D_CURSOR INTO
		:hO_ulIdPlcmtEvent:hO_ulIdPlcmtEvent_i,
		:hO_tsLastUpdate:hO_tsLastUpdate_i,
		:hO_ulIdPlcmtAdult:hO_ulIdPlcmtAdult_i,
		:hO_ulIdPlcmtChild:hO_ulIdPlcmtChild_i,
		:hO_ulIdRsrcAgency:hO_ulIdRsrcAgency_i,
		:hO_ulIdRsrcFacil:hO_ulIdRsrcFacil_i,
		:hO_szAddrPlcmtCity:hO_szAddrPlcmtCity_i,
		:hO_szAddrPlcmtCnty:hO_szAddrPlcmtCnty_i,
		:hO_szAddrPlcmtLn1:hO_szAddrPlcmtLn1_i,
		:hO_szAddrPlcmtLn2:hO_szAddrPlcmtLn2_i,
		:hO_szAddrPlcmtSt:hO_szAddrPlcmtSt_i,
		:hO_szAddrPlcmtZip:hO_szAddrPlcmtZip_i,
		:hO_szCdPlcmtInfo1:hO_szCdPlcmtInfo1_i,
		:hO_szCdPlcmtInfo2:hO_szCdPlcmtInfo2_i,
		:hO_szCdPlcmtInfo3:hO_szCdPlcmtInfo3_i,
		:hO_szCdPlcmtInfo4:hO_szCdPlcmtInfo4_i,
		:hO_szCdPlcmtInfo5:hO_szCdPlcmtInfo5_i,
		:hO_szCdPlcmtInfo6:hO_szCdPlcmtInfo6_i,
		:hO_szCdPlcmtInfo7:hO_szCdPlcmtInfo7_i,
		:hO_szCdPlcmtLivArr:hO_szCdPlcmtLivArr_i,
		:hO_szCdPlcmtRemovalRsn:hO_szCdPlcmtRemovalRsn_i,
		:hO_szCdPlcmtActPlanned:hO_szCdPlcmtActPlanned_i,
		:hO_szCdPlcmtType:hO_szCdPlcmtType_i,
		:hO_dtDtPlcmtCaregvrDiscuss:hO_dtDtPlcmtCaregvrDiscuss_i,
		:hO_dtDtPlcmtChildDiscuss:hO_dtDtPlcmtChildDiscuss_i,
		:hO_dtDtPlcmtChildPlan:hO_dtDtPlcmtChildPlan_i,
		:hO_dtDtPlcmtEducLog:hO_dtDtPlcmtEducLog_i,
		:hO_dtDtPlcmtEnd:hO_dtDtPlcmtEnd_i,
		:hO_dtDtPlcmtMeddevHistory:hO_dtDtPlcmtMeddevHistory_i,
		:hO_dtDtPlcmtParentsNotif:hO_dtDtPlcmtParentsNotif_i,
		:hO_dtDtPlcmtPreplaceVisit:hO_dtDtPlcmtPreplaceVisit_i,
		:hO_dtDtPlcmtSchoolRecords:hO_dtDtPlcmtSchoolRecords_i,
		:hO_dtDtPlcmtStart:hO_dtDtPlcmtStart_i,
		:hO_cIndPlcmtContCntct:hO_cIndPlcmtContCntct_i,
		:hO_cIndPlcmtEducLog:hO_cIndPlcmtEducLog_i,
		:hO_cIndPlcmetEmerg:hO_cIndPlcmetEmerg_i,
		:hO_cIndPlcmtNotApplic:hO_cIndPlcmtNotApplic_i,
		:hO_cIndPlcmtSchoolDoc:hO_cIndPlcmtSchoolDoc_i,
		:hO_cIndPlcmtWriteHistory:hO_cIndPlcmtWriteHistory_i,
		:hO_szNbrPlcmtPhoneExt:hO_szNbrPlcmtPhoneExt_i,
		:hO_szNbrPlcmtTelephone:hO_szNbrPlcmtTelephone_i,
		:hO_szNmPlcmtAgency:hO_szNmPlcmtAgency_i,
		:hO_szNmPlcmtContact:hO_szNmPlcmtContact_i,
		:hO_szNmPlcmtFacil:hO_szNmPlcmtFacil_i,
		:hO_szNmPlcmtPersonFull:hO_szNmPlcmtPersonFull_i,
		:hO_szTxtPlcmtAddrComment:hO_szTxtPlcmtAddrComment_i,
		:hO_szTxtPlcmtDiscussion:hO_szTxtPlcmtDiscussion_i,
		:hO_szTxtPlcmtDocuments:hO_szTxtPlcmtDocuments_i,
		:hO_szTxtPlcmtRemovalRsn:hO_szTxtPlcmtRemovalRsn_i,
		:hO_ulIdResource:hO_ulIdResource_i,
		:hO_szAddrRsrcStLn1:hO_szAddrRsrcStLn1_i,
		:hO_szAddrRsrcStLn2:hO_szAddrRsrcStLn2_i,
		:hO_szAddrRsrcCity:hO_szAddrRsrcCity_i,
		:hO_szCdRsrcState:hO_szCdRsrcState_i,
		:hO_lAddrRsrcZip:hO_lAddrRsrcZip_i,
		:hO_szAddrRsrcAttn:hO_szAddrRsrcAttn_i,
		:hO_szCdRsrcCnty:hO_szCdRsrcCnty_i,
		:hO_szCdRsrcInvolClosure:hO_szCdRsrcInvolClosure_i,
		:hO_szCdRsrcClosureRsn:hO_szCdRsrcClosureRsn_i,
		:hO_szCdRsrcCampusType:hO_szCdRsrcCampusType_i,
		:hO_szCdRsrcCategory:hO_szCdRsrcCategory_i,
		:hO_szCdRsrcCertBy:hO_szCdRsrcCertBy_i,
		:hO_szCdRsrcEthnicity:hO_szCdRsrcEthnicity_i,
		:hO_szCdRsrcFaHomeStatus:hO_szCdRsrcFaHomeStatus_i,
		:hO_cCdRsrcFaHomeType1:hO_cCdRsrcFaHomeType1_i,
		:hO_cCdRsrcFaHomeType2:hO_cCdRsrcFaHomeType2_i,
		:hO_cCdRsrcFaHomeType3:hO_cCdRsrcFaHomeType3_i,
		:hO_cCdRsrcFaHomeType4:hO_cCdRsrcFaHomeType4_i,
		:hO_cCdRsrcFaHomeType5:hO_cCdRsrcFaHomeType5_i,
		:hO_cCdRsrcFaHomeType6:hO_cCdRsrcFaHomeType6_i,
		:hO_cCdRsrcFaHomeType7:hO_cCdRsrcFaHomeType7_i,
		:hO_szCdRsrcFacilType:hO_szCdRsrcFacilType_i,
		:hO_szCdRsrcLanguage:hO_szCdRsrcLanguage_i,
		:hO_szCdRsrcMaintainer:hO_szCdRsrcMaintainer_i,
		:hO_szCdRsrcMaritalStatus:hO_szCdRsrcMaritalStatus_i,
		:hO_szCdRsrcOperBy:hO_szCdRsrcOperBy_i,
		:hO_szCdRsrcOwnership:hO_szCdRsrcOwnership_i,
		:hO_szCdRsrcPayment:hO_szCdRsrcPayment_i,
		:hO_szCdRsrcRecmndReopen:hO_szCdRsrcRecmndReopen_i,
		:hO_szCdRsrcRegion:hO_szCdRsrcRegion_i,
		:hO_szCdRsrcReligion:hO_szCdRsrcReligion_i,
		:hO_szCdRsrcRespite:hO_szCdRsrcRespite_i,
		:hO_szCdRsrcSchDist:hO_szCdRsrcSchDist_i,
		:hO_szCdRsrcSetting:hO_szCdRsrcSetting_i,
		:hO_szCdRsrcSourceInquiry:hO_szCdRsrcSourceInquiry_i,
		:hO_szCdRsrcStatus:hO_szCdRsrcStatus_i,
		:hO_szCdRsrcType:hO_szCdRsrcType_i,
		:hO_dtDtRsrcMarriage:hO_dtDtRsrcMarriage_i,
		:hO_dtDtRsrcCert:hO_dtDtRsrcCert_i,
		:hO_dtDtRsrcClose:hO_dtDtRsrcClose_i,
		:hO_ulIdRsrcFaHomeEvent:hO_ulIdRsrcFaHomeEvent_i,
		:hO_ulIdRsrcFaHomeStage:hO_ulIdRsrcFaHomeStage_i,
		:hO_cIndRsrcCareProv:hO_cIndRsrcCareProv_i,
		:hO_cIndRsrcEmergPlace:hO_cIndRsrcEmergPlace_i,
		:hO_cIndRsrcInactive:hO_cIndRsrcInactive_i,
		:hO_bIndRsrcIndivStudy:hO_bIndRsrcIndivStudy_i,
		:hO_bIndRsrcNonPrs:hO_bIndRsrcNonPrs_i,
		:hO_cIndRsrcTransport:hO_cIndRsrcTransport_i,
		:hO_cIndRsrcWriteHist:hO_cIndRsrcWriteHist_i,
		:hO_szNmRsrcLastUpdate:hO_szNmRsrcLastUpdate_i,
		:hO_szNmResource:hO_szNmResource_i,
		:hO_szNmRsrcContact:hO_szNmRsrcContact_i,
		:hO_dNbrRsrcAnnualIncome:hO_dNbrRsrcAnnualIncome_i,
		:hO_lNbrSchCampusNbr:hO_lNbrSchCampusNbr_i,
		:hO_lNbrRsrcFacilAcclaim:hO_lNbrRsrcFacilAcclaim_i,
		:hO_uNbrRsrcFacilCapacity:hO_uNbrRsrcFacilCapacity_i,
		:hO_uNbrRsrcFMAgeMax:hO_uNbrRsrcFMAgeMax_i,
		:hO_uNbrRsrcFMAgeMin:hO_uNbrRsrcFMAgeMin_i,
		:hO_uNbrRsrcMlAgeMax:hO_uNbrRsrcMlAgeMax_i,
		:hO_uNbrRsrcMlAgeMin:hO_uNbrRsrcMlAgeMin_i,
		:hO_uNbrRsrcIntChildren:hO_uNbrRsrcIntChildren_i,
		:hO_uNbrRsrcIntFeAgeMax:hO_uNbrRsrcIntFeAgeMax_i,
		:hO_uNbrRsrcIntFeAgeMin:hO_uNbrRsrcIntFeAgeMin_i,
		:hO_uNbrRsrcIntMaAgeMax:hO_uNbrRsrcIntMaAgeMax_i,
		:hO_uNbrRsrcIntMaAgeMin:hO_uNbrRsrcIntMaAgeMin_i,
		:hO_sNbrRsrcOpenSlots:hO_sNbrRsrcOpenSlots_i,
		:hO_szNbrRsrcPhn:hO_szNbrRsrcPhn_i,
		:hO_lNbrFacilPhoneExtension:hO_lNbrFacilPhoneExtension_i,
		:hO_szNbrRsrcVid:hO_szNbrRsrcVid_i,
		:hO_szTxtRsrcAddrCmnts:hO_szTxtRsrcAddrCmnts_i,
		:hO_szTxtRsrcComments:hO_szTxtRsrcComments_i;

/**************************/
/* Total fetch fields: 121 */
/**************************/


memcpy (&previousSQLCA, &sqlca, sizeof (struct sqlca));

if ( sqlca.sqlcode == 0 )
{
             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdPlcmtEvent),
                          &hO_ulIdPlcmtEvent,
                          sizeof(hO_ulIdPlcmtEvent),
                          hO_ulIdPlcmtEvent_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToTimestamp(pOutputDataRec->tsLastUpdate,
                          hO_tsLastUpdate,
                          hO_tsLastUpdate_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdPlcmtAdult),
                          &hO_ulIdPlcmtAdult,
                          sizeof(hO_ulIdPlcmtAdult),
                          hO_ulIdPlcmtAdult_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdPlcmtChild),
                          &hO_ulIdPlcmtChild,
                          sizeof(hO_ulIdPlcmtChild),
                          hO_ulIdPlcmtChild_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdRsrcAgency),
                          &hO_ulIdRsrcAgency,
                          sizeof(hO_ulIdRsrcAgency),
                          hO_ulIdRsrcAgency_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdRsrcFacil),
                          &hO_ulIdRsrcFacil,
                          sizeof(hO_ulIdRsrcFacil),
                          hO_ulIdRsrcFacil_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrPlcmtCity,
                          hO_szAddrPlcmtCity,
                          21,
                          hO_szAddrPlcmtCity_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrPlcmtCnty,
                          hO_szAddrPlcmtCnty,
                          4,
                          hO_szAddrPlcmtCnty_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrPlcmtLn1,
                          hO_szAddrPlcmtLn1,
                          31,
                          hO_szAddrPlcmtLn1_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrPlcmtLn2,
                          hO_szAddrPlcmtLn2,
                          31,
                          hO_szAddrPlcmtLn2_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrPlcmtSt,
                          hO_szAddrPlcmtSt,
                          3,
                          hO_szAddrPlcmtSt_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrPlcmtZip,
                          hO_szAddrPlcmtZip,
                          11,
                          hO_szAddrPlcmtZip_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtInfo1,
                          hO_szCdPlcmtInfo1,
                          4,
                          hO_szCdPlcmtInfo1_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtInfo2,
                          hO_szCdPlcmtInfo2,
                          4,
                          hO_szCdPlcmtInfo2_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtInfo3,
                          hO_szCdPlcmtInfo3,
                          4,
                          hO_szCdPlcmtInfo3_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtInfo4,
                          hO_szCdPlcmtInfo4,
                          4,
                          hO_szCdPlcmtInfo4_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtInfo5,
                          hO_szCdPlcmtInfo5,
                          4,
                          hO_szCdPlcmtInfo5_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtInfo6,
                          hO_szCdPlcmtInfo6,
                          4,
                          hO_szCdPlcmtInfo6_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtInfo7,
                          hO_szCdPlcmtInfo7,
                          4,
                          hO_szCdPlcmtInfo7_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtLivArr,
                          hO_szCdPlcmtLivArr,
                          4,
                          hO_szCdPlcmtLivArr_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtRemovalRsn,
                          hO_szCdPlcmtRemovalRsn,
                          4,
                          hO_szCdPlcmtRemovalRsn_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtActPlanned,
                          hO_szCdPlcmtActPlanned,
                          2,
                          hO_szCdPlcmtActPlanned_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdPlcmtType,
                          hO_szCdPlcmtType,
                          5,
                          hO_szCdPlcmtType_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtCaregvrDiscuss),
                          pOutputDataRec->tmScrTmGeneric1,
                          hO_dtDtPlcmtCaregvrDiscuss,
                          hO_dtDtPlcmtCaregvrDiscuss_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtChildDiscuss),
                          pOutputDataRec->tmScrTmGeneric2,
                          hO_dtDtPlcmtChildDiscuss,
                          hO_dtDtPlcmtChildDiscuss_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtChildPlan),
                          pOutputDataRec->tmScrTmGeneric3,
                          hO_dtDtPlcmtChildPlan,
                          hO_dtDtPlcmtChildPlan_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtEducLog),
                          pOutputDataRec->tmScrTmGeneric4,
                          hO_dtDtPlcmtEducLog,
                          hO_dtDtPlcmtEducLog_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtEnd),
                          pOutputDataRec->tmScrTmGeneric5,
                          hO_dtDtPlcmtEnd,
                          hO_dtDtPlcmtEnd_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtMeddevHistory),
                          pOutputDataRec->tmScrTmGeneric6,
                          hO_dtDtPlcmtMeddevHistory,
                          hO_dtDtPlcmtMeddevHistory_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtParentsNotif),
                          pOutputDataRec->tmScrTmGeneric7,
                          hO_dtDtPlcmtParentsNotif,
                          hO_dtDtPlcmtParentsNotif_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtPreplaceVisit),
                          pOutputDataRec->tmScrTmGeneric8,
                          hO_dtDtPlcmtPreplaceVisit,
                          hO_dtDtPlcmtPreplaceVisit_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtSchoolRecords),
                          pOutputDataRec->tmScrTmGeneric9,
                          hO_dtDtPlcmtSchoolRecords,
                          hO_dtDtPlcmtSchoolRecords_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtPlcmtStart),
                          pOutputDataRec->tmScrTmGeneric10,
                          hO_dtDtPlcmtStart,
                          hO_dtDtPlcmtStart_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndPlcmtContCntct),
                          &hO_cIndPlcmtContCntct,
                          sizeof(hO_cIndPlcmtContCntct),
                          hO_cIndPlcmtContCntct_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndPlcmtEducLog),
                          &hO_cIndPlcmtEducLog,
                          sizeof(hO_cIndPlcmtEducLog),
                          hO_cIndPlcmtEducLog_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndPlcmetEmerg),
                          &hO_cIndPlcmetEmerg,
                          sizeof(hO_cIndPlcmetEmerg),
                          hO_cIndPlcmetEmerg_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndPlcmtNotApplic),
                          &hO_cIndPlcmtNotApplic,
                          sizeof(hO_cIndPlcmtNotApplic),
                          hO_cIndPlcmtNotApplic_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndPlcmtSchoolDoc),
                          &hO_cIndPlcmtSchoolDoc,
                          sizeof(hO_cIndPlcmtSchoolDoc),
                          hO_cIndPlcmtSchoolDoc_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndPlcmtWriteHistory),
                          &hO_cIndPlcmtWriteHistory,
                          sizeof(hO_cIndPlcmtWriteHistory),
                          hO_cIndPlcmtWriteHistory_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNbrPlcmtPhoneExt,
                          hO_szNbrPlcmtPhoneExt,
                          9,
                          hO_szNbrPlcmtPhoneExt_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNbrPlcmtTelephone,
                          hO_szNbrPlcmtTelephone,
                          11,
                          hO_szNbrPlcmtTelephone_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNmPlcmtAgency,
                          hO_szNmPlcmtAgency,
                          31,
                          hO_szNmPlcmtAgency_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNmPlcmtContact,
                          hO_szNmPlcmtContact,
                          26,
                          hO_szNmPlcmtContact_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNmPlcmtFacil,
                          hO_szNmPlcmtFacil,
                          31,
                          hO_szNmPlcmtFacil_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNmPlcmtPersonFull,
                          hO_szNmPlcmtPersonFull,
                          26,
                          hO_szNmPlcmtPersonFull_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szTxtPlcmtAddrComment,
                          hO_szTxtPlcmtAddrComment,
                          301,
                          hO_szTxtPlcmtAddrComment_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szTxtPlcmtDiscussion,
                          hO_szTxtPlcmtDiscussion,
                          241,
                          hO_szTxtPlcmtDiscussion_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szTxtPlcmtDocuments,
                          hO_szTxtPlcmtDocuments,
                          241,
                          hO_szTxtPlcmtDocuments_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szTxtPlcmtRemovalRsn,
                          hO_szTxtPlcmtRemovalRsn,
                          301,
                          hO_szTxtPlcmtRemovalRsn_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdResource),
                          &hO_ulIdResource,
                          sizeof(hO_ulIdResource),
                          hO_ulIdResource_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrRsrcStLn1,
                          hO_szAddrRsrcStLn1,
                          31,
                          hO_szAddrRsrcStLn1_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrRsrcStLn2,
                          hO_szAddrRsrcStLn2,
                          31,
                          hO_szAddrRsrcStLn2_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrRsrcCity,
                          hO_szAddrRsrcCity,
                          21,
                          hO_szAddrRsrcCity_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcState,
                          hO_szCdRsrcState,
                          3,
                          hO_szCdRsrcState_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->lAddrRsrcZip,
                          hO_lAddrRsrcZip,
                          11,
                          hO_lAddrRsrcZip_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szAddrRsrcAttn,
                          hO_szAddrRsrcAttn,
                          31,
                          hO_szAddrRsrcAttn_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcCnty,
                          hO_szCdRsrcCnty,
                          4,
                          hO_szCdRsrcCnty_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcInvolClosure,
                          hO_szCdRsrcInvolClosure,
                          2,
                          hO_szCdRsrcInvolClosure_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcClosureRsn,
                          hO_szCdRsrcClosureRsn,
                          4,
                          hO_szCdRsrcClosureRsn_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcCampusType,
                          hO_szCdRsrcCampusType,
                          2,
                          hO_szCdRsrcCampusType_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcCategory,
                          hO_szCdRsrcCategory,
                          2,
                          hO_szCdRsrcCategory_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcCertBy,
                          hO_szCdRsrcCertBy,
                          3,
                          hO_szCdRsrcCertBy_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcEthnicity,
                          hO_szCdRsrcEthnicity,
                          3,
                          hO_szCdRsrcEthnicity_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcFaHomeStatus,
                          hO_szCdRsrcFaHomeStatus,
                          4,
                          hO_szCdRsrcFaHomeStatus_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cCdRsrcFaHomeType1),
                          &hO_cCdRsrcFaHomeType1,
                          sizeof(hO_cCdRsrcFaHomeType1),
                          hO_cCdRsrcFaHomeType1_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cCdRsrcFaHomeType2),
                          &hO_cCdRsrcFaHomeType2,
                          sizeof(hO_cCdRsrcFaHomeType2),
                          hO_cCdRsrcFaHomeType2_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cCdRsrcFaHomeType3),
                          &hO_cCdRsrcFaHomeType3,
                          sizeof(hO_cCdRsrcFaHomeType3),
                          hO_cCdRsrcFaHomeType3_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cCdRsrcFaHomeType4),
                          &hO_cCdRsrcFaHomeType4,
                          sizeof(hO_cCdRsrcFaHomeType4),
                          hO_cCdRsrcFaHomeType4_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cCdRsrcFaHomeType5),
                          &hO_cCdRsrcFaHomeType5,
                          sizeof(hO_cCdRsrcFaHomeType5),
                          hO_cCdRsrcFaHomeType5_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cCdRsrcFaHomeType6),
                          &hO_cCdRsrcFaHomeType6,
                          sizeof(hO_cCdRsrcFaHomeType6),
                          hO_cCdRsrcFaHomeType6_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cCdRsrcFaHomeType7),
                          &hO_cCdRsrcFaHomeType7,
                          sizeof(hO_cCdRsrcFaHomeType7),
                          hO_cCdRsrcFaHomeType7_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcFacilType,
                          hO_szCdRsrcFacilType,
                          3,
                          hO_szCdRsrcFacilType_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcLanguage,
                          hO_szCdRsrcLanguage,
                          3,
                          hO_szCdRsrcLanguage_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcMaintainer,
                          hO_szCdRsrcMaintainer,
                          3,
                          hO_szCdRsrcMaintainer_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcMaritalStatus,
                          hO_szCdRsrcMaritalStatus,
                          3,
                          hO_szCdRsrcMaritalStatus_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcOperBy,
                          hO_szCdRsrcOperBy,
                          3,
                          hO_szCdRsrcOperBy_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcOwnership,
                          hO_szCdRsrcOwnership,
                          3,
                          hO_szCdRsrcOwnership_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcPayment,
                          hO_szCdRsrcPayment,
                          3,
                          hO_szCdRsrcPayment_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcRecmndReopen,
                          hO_szCdRsrcRecmndReopen,
                          4,
                          hO_szCdRsrcRecmndReopen_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcRegion,
                          hO_szCdRsrcRegion,
                          3,
                          hO_szCdRsrcRegion_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcReligion,
                          hO_szCdRsrcReligion,
                          3,
                          hO_szCdRsrcReligion_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcRespite,
                          hO_szCdRsrcRespite,
                          2,
                          hO_szCdRsrcRespite_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcSchDist,
                          hO_szCdRsrcSchDist,
                          7,
                          hO_szCdRsrcSchDist_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcSetting,
                          hO_szCdRsrcSetting,
                          3,
                          hO_szCdRsrcSetting_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcSourceInquiry,
                          hO_szCdRsrcSourceInquiry,
                          4,
                          hO_szCdRsrcSourceInquiry_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcStatus,
                          hO_szCdRsrcStatus,
                          3,
                          hO_szCdRsrcStatus_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szCdRsrcType,
                          hO_szCdRsrcType,
                          3,
                          hO_szCdRsrcType_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtRsrcMarriage),
                          pOutputDataRec->tmScrTmGeneric14,
                          hO_dtDtRsrcMarriage,
                          hO_dtDtRsrcMarriage_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtRsrcCert),
                          pOutputDataRec->tmScrTmGeneric15,
                          hO_dtDtRsrcCert,
                          hO_dtDtRsrcCert_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToDateAndTime(&(pOutputDataRec->dtDtRsrcClose),
                          pOutputDataRec->tmScrTmGeneric16,
                          hO_dtDtRsrcClose,
                          hO_dtDtRsrcClose_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdRsrcFaHomeEvent),
                          &hO_ulIdRsrcFaHomeEvent,
                          sizeof(hO_ulIdRsrcFaHomeEvent),
                          hO_ulIdRsrcFaHomeEvent_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->ulIdRsrcFaHomeStage),
                          &hO_ulIdRsrcFaHomeStage,
                          sizeof(hO_ulIdRsrcFaHomeStage),
                          hO_ulIdRsrcFaHomeStage_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndRsrcCareProv),
                          &hO_cIndRsrcCareProv,
                          sizeof(hO_cIndRsrcCareProv),
                          hO_cIndRsrcCareProv_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndRsrcEmergPlace),
                          &hO_cIndRsrcEmergPlace,
                          sizeof(hO_cIndRsrcEmergPlace),
                          hO_cIndRsrcEmergPlace_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndRsrcInactive),
                          &hO_cIndRsrcInactive,
                          sizeof(hO_cIndRsrcInactive),
                          hO_cIndRsrcInactive_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->bIndRsrcIndivStudy),
                          &hO_bIndRsrcIndivStudy,
                          sizeof(hO_bIndRsrcIndivStudy),
                          hO_bIndRsrcIndivStudy_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->bIndRsrcNonPrs),
                          &hO_bIndRsrcNonPrs,
                          sizeof(hO_bIndRsrcNonPrs),
                          hO_bIndRsrcNonPrs_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndRsrcTransport),
                          &hO_cIndRsrcTransport,
                          sizeof(hO_cIndRsrcTransport),
                          hO_cIndRsrcTransport_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->cIndRsrcWriteHist),
                          &hO_cIndRsrcWriteHist,
                          sizeof(hO_cIndRsrcWriteHist),
                          hO_cIndRsrcWriteHist_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNmRsrcLastUpdate,
                          hO_szNmRsrcLastUpdate,
                          26,
                          hO_szNmRsrcLastUpdate_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNmResource,
                          hO_szNmResource,
                          31,
                          hO_szNmResource_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNmRsrcContact,
                          hO_szNmRsrcContact,
                          26,
                          hO_szNmRsrcContact_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->dNbrRsrcAnnualIncome),
                          &hO_dNbrRsrcAnnualIncome,
                          sizeof(hO_dNbrRsrcAnnualIncome),
                          hO_dNbrRsrcAnnualIncome_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->lNbrSchCampusNbr),
                          &hO_lNbrSchCampusNbr,
                          sizeof(hO_lNbrSchCampusNbr),
                          hO_lNbrSchCampusNbr_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->lNbrRsrcFacilAcclaim),
                          &hO_lNbrRsrcFacilAcclaim,
                          sizeof(hO_lNbrRsrcFacilAcclaim),
                          hO_lNbrRsrcFacilAcclaim_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcFacilCapacity),
                          &hO_uNbrRsrcFacilCapacity,
                          sizeof(hO_uNbrRsrcFacilCapacity),
                          hO_uNbrRsrcFacilCapacity_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcFMAgeMax),
                          &hO_uNbrRsrcFMAgeMax,
                          sizeof(hO_uNbrRsrcFMAgeMax),
                          hO_uNbrRsrcFMAgeMax_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcFMAgeMin),
                          &hO_uNbrRsrcFMAgeMin,
                          sizeof(hO_uNbrRsrcFMAgeMin),
                          hO_uNbrRsrcFMAgeMin_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcMlAgeMax),
                          &hO_uNbrRsrcMlAgeMax,
                          sizeof(hO_uNbrRsrcMlAgeMax),
                          hO_uNbrRsrcMlAgeMax_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcMlAgeMin),
                          &hO_uNbrRsrcMlAgeMin,
                          sizeof(hO_uNbrRsrcMlAgeMin),
                          hO_uNbrRsrcMlAgeMin_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcIntChildren),
                          &hO_uNbrRsrcIntChildren,
                          sizeof(hO_uNbrRsrcIntChildren),
                          hO_uNbrRsrcIntChildren_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcIntFeAgeMax),
                          &hO_uNbrRsrcIntFeAgeMax,
                          sizeof(hO_uNbrRsrcIntFeAgeMax),
                          hO_uNbrRsrcIntFeAgeMax_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcIntFeAgeMin),
                          &hO_uNbrRsrcIntFeAgeMin,
                          sizeof(hO_uNbrRsrcIntFeAgeMin),
                          hO_uNbrRsrcIntFeAgeMin_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcIntMaAgeMax),
                          &hO_uNbrRsrcIntMaAgeMax,
                          sizeof(hO_uNbrRsrcIntMaAgeMax),
                          hO_uNbrRsrcIntMaAgeMax_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->uNbrRsrcIntMaAgeMin),
                          &hO_uNbrRsrcIntMaAgeMin,
                          sizeof(hO_uNbrRsrcIntMaAgeMin),
                          hO_uNbrRsrcIntMaAgeMin_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToNumber(&(pOutputDataRec->sNbrRsrcOpenSlots),
                          &hO_sNbrRsrcOpenSlots,
                          sizeof(hO_sNbrRsrcOpenSlots),
                          hO_sNbrRsrcOpenSlots_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNbrRsrcPhn,
                          hO_szNbrRsrcPhn,
                          11,
                          hO_szNbrRsrcPhn_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->lNbrFacilPhoneExtension,
                          hO_lNbrFacilPhoneExtension,
                          9,
                          hO_lNbrFacilPhoneExtension_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szNbrRsrcVid,
                          hO_szNbrRsrcVid,
                          15,
                          hO_szNbrRsrcVid_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szTxtRsrcAddrCmnts,
                          hO_szTxtRsrcAddrCmnts,
                          81,
                          hO_szTxtRsrcAddrCmnts_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

             uStatus=ARC_UTLHostToString(pOutputDataRec->szTxtRsrcComments,
                          hO_szTxtRsrcComments,
                          301,
                          hO_szTxtRsrcComments_i);
             if (uStatus != 0)
             {
                 return (uStatus);
             }

}


EXEC SQL
	CLOSE CSES28D_CURSOR;


memcpy (pSQLCA, &previousSQLCA, sizeof(struct sqlca));
return (((struct sqlca *)pSQLCA)->sqlcode);
}
